# Задание 1.
#Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
# Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
------------------------------------------------------------------
a = int(input("Введите расстояние первой пробежки в км: "))
b = int(input("Введите целевой результат в км: "))

counter = 1  

while a < b:
    a *= 1.1  # расчет расстояния пробежки
    counter += 1  # увеличение счетчика дней

print(f"На {counter}-й день спортсмен достиг результата — не менее {b} км")


# Задание 2.
#
# Пользователь вводит целое положительное число.
# Найдите самую большую цифру в числе.
# Для решения используйте цикл while и только арифметические операции.
# Не используйте взятие по индексу.
#
# Пример:
# Ведите целое положительное число: 123456789
# Самая большая цифра в числе: 9
----------------------------------------------------
user = int(input('Введите целое положительное число: '))
a = user % 10
user = user // 10
while user > 0:
    if user % 10 > a:
        a = user % 10
        user = user // 10
    print(f' Самая большая цифра в числе: {a}')
    break
else:
    print('Вы ввели неправильное число :( ')
    
    
    # Задание 3. Создать список и заполнить его элементами различных типов данных.
# Реализовать проверку типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
#
# Пример:
# для списка [5, "string", 0.15, True, None]
# результат
#
# <class 'int'>
# <class 'str'>
# <class 'float'>
# <class 'bool'>
# <class 'NoneType'>
--------------------------------------------------
t = [5, "Kiss", 9.7, False, None]
print("результат")

print(type(5))
print(type("Kiss"))
print(type(9.7))
print(type(False))
print(type(None))


# Задание 4. Для списка реализовать обмен значений соседних элементов,
# т.е. значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().
#
# Пример:
# Введите целые числа через пробел: 1 2 3 4
# Результат: 2 1 4 3
#
# Введите целые числа через пробел: 1 2 3
# Результат: 2 1 3
-------------------------------------------------------------------
my_list = input('Введите целые числа через пробел: ').split()
for i in range(0, len(my_list)-1, 2):
    my_list[i], my_list[i+1] = my_list[i+1], my_list[i]
print('Результат:', my_list)


# Задание 5. Пользователь вводит строку из нескольких слов,
# разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если слово длинное,
# выводить только первые 10 букв в слове.
#
# Пример:
# Введите слова через пробел: раз два три
# 1. раз
# 2. два
# 3. три
#
# Введите слова через пробел: раз перерефрижерированность
# 1. раз
# 2. перерефриж
-------------------------------------------------------
my_list = input('Введите слова через пробел:').split()
for ind, el in enumerate(my_list, 1):
    print(ind, el[0:10])
    
