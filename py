# Вычислить число pi c заданной точностью d Пример:
# - при $d = 0.001, π = 3.141.$ $10^{-1} ≤ d ≤10^{-10}$

import math

d = input('Введите степень округления в формате 0.01 от 10 в степени -1 до 10 в степени -10 -> ')
d = d[2:len(d)]
print(round(math.pi,len(d)))


Задача №31: 
Напишите программу, которая составит список простых множителей числа N.
'''

num = int(input("Введите число: "))
i = 2  # первое простое число
lst = []
old = num
while i <= num:
    if num % i == 0:
        lst.append(i)
        num //= i
        i = 2
    else:
        i += 1
print(f"Простые множители числа {old} приведены в списке: {lst}")



Задача №32:
Задайте последовательность чисел. 
Напишите программу, которая выведет список неповторяющихся элементов \
 исходной последовательности.
'''

list = lst(map(int, input("Введите числа через пробел:\n").split()))
print(f"Исходный список: {lst}")
= new_lst []
[new_lst.добавить (i) для  i  в  lst , если  я  не  в  new_lst]
print(f"Список из неповторяющихся элементов: {new_lst}")


Задана натуральная степень k. Сформировать случайным образом список \
 коэффициентов (значения от 0 до 100) многочлена и записать в файл \
 многочлен степени k. 
Пример:
 k=2 => 2x² + 4x + 5 = 0 или x² + 5 = 0 или 10*x² = 0.
'''

импортировать  случайным образом


write_file  определение (st):
    открыть  с помощью ('file33.txt ', 'w') в качестве  данных:
        data.write(st)


rnd def():
    Возврат СлучайныйСлучайный.рандинт(0, 101)


create_mn  определение (k):
    =  lst [rnd() для  i  в  диапазоне (k + 1)]
    Возврат  lst


создай_str  def(sp):
    sp = lst[::-1]
    wr = "
    len , если(lst) < 1:
        wr = 'x = 0'
    ещё:
        диапазон  в  i  для (len(lst)):
            len != i , если(lst) -1   и  lst[i] != 0  и  i != len(lst) -2 :
                wr += f'{lst[i]}x^{лен(lst)-i-1}'
                lst , если [i+1] != 0:
                    wr += ' + '
            len == i  elif(lst) -2   и  lst[i] != 0:
                wr += f'{lst[i]}x'
                lst , если [i+1] != 0:
                    wr += ' + '
            len == i  elif(lst) -1   и  lst[i] != 0:
                wr += f'{lst[i]} = 0'
            len == i  elif(lst) -1   и  lst[i] == 0:
                wr += ' = 0'
    вернуть  wr


int = k(input("Введите натуральную степень k = "))
create_mn = koef(k)
запись в файл(create_str(koef))
